crime_n <- crime[c("V1", "V2", "V3", "V4", "V5","V6", "V7")]
names(crime_n) <- c("state","violent", "murder", "metro", "white", "HS", "poverty")
crime_n <- crime_n[-1, ]
rownames(crime_n) <- NULL
crime <- crime_n
class(crime$state)
crime$violent <- strtoi(crime$violent)
class(crime$violent)
crime$murder <- as.numeric(as.character(crime$murder))
crime$metro <- as.numeric(as.character(crime$metro))
crime$white <- as.numeric(as.character(crime$white))
crime$HS <- as.numeric(as.character(crime$HS))
crime$poverty <- as.numeric(as.character(crime$poverty))
vectorlist <- c("murder", "metro", "white", "HS", "poverty")
for (i in vectorlist) {
crime$i <- as.numeric(as.character(crime$i))
}
vec_lo <- c(TRUE, FALSE, TRUE, TRUE)
vec_in <- c(1L, 2L, 3L, 4L)
vec_do <- c(1, 2, 3, 4)
vec_ch <- c("1", "2", "3", "4")
mt1 <- cbind(vec_lo, vec_in)
View(mt1)
mt1
mt1 <- cbind(vec_lo, vec_in)
mt1
mt2 <- rbind(vec_lo, vec_ch)
mt2
vec_cx <- c(1, 2, 3, "4")
vec_cx
vec_lo <- c(TRUE, FALSE, TRUE, TRUE)
vec_in <- c(1L, 2L, 3L, 4L)
vec_do <- c(1, 2, 3, 4)
vec_ch <- c("1", "2", "3", "4")
mt1 <- cbind(vec_lo, vec_in)
mt1
mt2 <- rbind(vec_lo, vec_ch)
mt2
vec_cx <- c(1, 2, 3, "4")
vec_cx
vec_lo + vec_lo
vec_lo + vec_do
vec_do + vec_ch
lst1 <- list(vec_do, vec_Ch)
lst1
lst1 <- list(vec_do, vec_Ch)
lst1 <- list(vec_do, vec_ch)
lst1
lst1[1]
lst1[[1]]
lst1[[1][2]]
list1[[2][1]]
lst1[[2]1]
lst1[[2]][1]
typeof(lst1[[1]])
typeof(lst1[[1]][2])
typeof(lst1[[2]][2])
typeof(lst1[[1]])
typeof(lst1[[1]][2])
typeof(lst1[[2]])
typeof(lst1[[1]])
typeof(lst1[[2]])
lst2 <- list(vec1 = vec_do, vec2 = vec_ch)
lst2
lst2$vec1
lst2$vec1[2]
names(lst2)
names(lst1)
colnames(mt1)
colnames(mt2)
mt1
mt2
colnames(mt1)
rownames(mt2)
rownames(mt1)
colnames(mt2)
vec_on <- c("하나", "둘", "셋", "둘")
vec_on
vec_onf <- factor(vec_on)
vec_onf
as.integer(vec_onf)
typeof(vec_onf)
vec_onf + vec_onf
levels(vec_onf)
vec_n <- c(2, 1, 3, 2)
vec_nf <- factor(vec_n)vec_n
vec_nf
vec_n <- c(2, 1, 3, 2)
vec_nf <- factor(vec_n)
vec_nf
dt <- data.frame(vec_on, vec_onf, vec_n, vec_nf)
dt
colnames(dt)
dt$1
dt$vec_on
dt$vec_on
dt[,1]
dt[1]
dt[1,]
typeof(dt$vec_on)
typeof(vec_on)
class(vec_on)
class(vec_onf)
class(dt)
class(dt$vec_on)
class(dt$vec_n)
class(dt$vec_onf)
class(dt$vec_nf)
vec_n3 <- 1:3
vec_n3
dt2 <- data.frame(vec_n, vec_n3)
vec_n2 <- c(2,1)
dt3 <- data.frame(vec_n, vec_n2)
dt3
mt1 <- cbind(vec_n, vec_n3)
mt1
length(vec_n)
length(vec_n3)
dim(dt)
View(dt)
dim(dt3)
View(dt3)
length(dt)
length(dt3)
length(vec_n3)
View(dt3)
mt1
mt2
mt2 <- cbind(vec_n, vec_n2)
mt2
mt1
mt2
mt1 + mt2
dt3
data.frame(matrix(1:8, nrow = 4, ncol = 2))
dt3 + data.frame(matrix(1:8, nrow = 4, ncol = 2))
mt1 + matrix(vec_n)
dt3 + data.frame(vec_n)
mt1
mt1 * mt1
mt1 %*% mt1
t(mt1)
mt1
mt1 * mt1
t(mt1)
t(mt1) * mt1
t(mt1) %*% mt1
t(dt3) %*% dt3
mt4 <- matrix(1:4, nrow = 2, ncol = 2)
mt4
imt4 <- solve(mt4)
imt4
imt4 %*% mt4
res <- 0
for (i in 1:100) {
res <- res + i
}
res
res1 <- 0
for (i in 1:100) {
res1 <- res1 + i
}
res2 <- 0
for (i in 70:80){
res2 <- res2 + i
}
res1 - res2
res <- 0
for (i in 1:100){
if (i >= 70 & i <= 80) next
res <- res + i
}
res
res <- 0
for ( i in 1:100) {
if (i >= 70 && i <= 80) {
next
}
else {
res <- res + i
}
}
res
res <- 0
for (i in 1:100) {
res <- res + i
if (res > 1000) break
}
i
res <- 0
i <- 0
repeat{
i = i + 1
res <- res + i
if (res > 1000) break
}
i
wg1998 <- data.frame(matrix(c(1,2,3,0,2,1), nrow = 3))
View(wg1998)
names(wg1998 <- c("pid", "wage1998"))
names(wg1998) <- c("pid", "wage1998"))
names(wg1998) <- c("pid", "wage1998")
wg1998 <- data.frame(matrix(c(1,2,3,0,2,1), nrow = 3))
names(wg1998) <- c("pid", "wage1998")
wg1999 <- data.frame(matrix(c(1,2,3,1,1,2), nrow = 3))
names(wg1999) <- c("pid", "wage1999")
wg1998 <- data.frame(matrix(c(1,2,3,0,2,1), nrow = 3))
names(wg1998) <- c("pid", "wage1998")
wg1998
wg1999 <- data.frame(matrix(c(1,2,3,1,1,2), nrow = 3))
names(wg1999) <- c("pid", "wage1999")
wg1999
mg1 <- merge(wage1998, wage1999, by = "pid")
mg1 <- merge(wg1998, wg1999, by = "pid")
mg1
swg1999
swg1999 <- wg1999[wg1999$pid!=3,]
swg1999
mg2 <- merge(wg1009, swg1999, by = "pid")
mg2
mg2 <- merge(wg1999, swg1999, by = "pid")
mg2
mg2 <- merge(wg1998, swg1999, by = "pid")
mg2
swg1999 <- wg1999[wg1999$pid!=3,]
swg1999
mg2 <- merge(wg1998, swg1999, by = "pid")
mg2
mg3 <- merge(wg1998, swg1999, by = "pid", all = TRUE)
mg3
mwg1999 <- wg1999
mwg1999
mwg1999$pid[mwg1999$pid==3] <- 2
mwg1999
mwg1999 <- wg1999
mwg1999$pid[mwg1999$pid==3] <- 2
mg4 <- merge(wg1999, mwg1999, by = "pid", all = TRUE)
mg4
mwg1999 <- wg1999
mwg1999$pid[mwg1999$pid==3] <- 2
mg4 <- merge(wg1998, mwg1999, by = "pid", all = TRUE)
mg4
mwg1999 <- wg1999
mwg1999
mwg1999$pid[mwg1999$pid==3] <- 2
mwg1999
mg4 <- merge(wg1998, mwg1999, by = "pid", all = TRUE)
mg4
wg1998$year <- 1998
wg1999$year <- 1999
wg1998
wg1998$year <- 1998
wg1999$year <- 1999
rb1 <- rbind(wg1998, wg1999)
wg1999
names(wg1998)[names(wg1998) == "wage1998"] <- "wage"
names(wg1999)[names(wg1999) == "wage1999"] <- "wage"
wg1998
names(wg1998)[names(wg1998) == "wage1998"] <- "wage"
wg1998
names(wg1999)[names(wg1999) == "wage1999"] <- "wage"
wg1999
rb1 <- rbind(wg1998, wg1999)
rb1
rb2 <- rb1[order(rb1$pid, rb1$year),]
rb2
rb3 <- rb2[order(rownames(rb2))]
rb3
rb3 <- rb2[order(rownames(rb2)),]
rb3
rownames(rb2) <- NULL
rb2
cbwg <- cbind(Wg1998, wg1999)
cbwg <- cbind(wg1998, wg1999)
cbwg
swg1999
cbwg2 <- cbind(wg1998, swg1999)
wf1 <- reshape(rb2, direction = "wide", timevar = "year", idvar = "pid")
wf1
wf1 <- reshape(rb2, direction = "wide", timevar = "year", idvar = "pid")
wf1
lf1 <- reshape(wf1, direction = "long", timevar = "year", idvar = "pid")
lf1
lf2 <- reshape(wf1, direction = "long", varying = c("wage1998", "wage1999"), v.names = "wage", timevar = "year", idvar = "pid")
lf2 <- reshape(mg1, direction = "long", varying = c("wage1998", "wage1999"), v.names = "wage", timevar = "year", idvar = "pid")
lf2
lf3 <- reshape(mg1, direction = "long", varying = c("wage1998", "wage1999"), sep = "", timevar = "year", idvar = "pid")
lf3
lf4 <- lf3[order(lf3$pid, rb3$year)]
lf4
lf4 <- lf3[order(lf3$pid, rb3$year),]
lf4
rownames(lf3) <- NULL
lf3
args(read.csv)
args(read.table)
satis <- read.csv("http://kpc.khu.ac.kr/sda_2019/satis.csv", sep=",")
?read.table
?read.csv
?read.table
?read.csv
demog <- read.table("C:/Users/eunee/바탕 화면/demog.csv", sep = ",")
demog <- read.table("C:/Users/eunee/바탕 화면/demog.csv", sep = ",")
demog <- read.table("C:/Users/eunee/바탕 화면/demog.csv", sep = ",")
demog <- read.table("C:/Users/eunee/바탕 화면/demog.csv", sep = ",")
demog <- read.table("C:/Users/eunee/바탕 화면/demog.csv", sep = ",")
demog <- read.table("C:/Users/eunee/sda/demog.csv", sep = ",")
demog <- read.table("C:/Users/eunee/sda/data/demog.csv", sep = ",")
demog <- read.table("C:/Users/eunee/sda/data/demog.csv", sep = ",")
View(demog)
demog <- data.frame(t(demog))
View(demog)
View(demog)
sdemog <- demog[,c("X1", "X6", "X8", "X10", "X14")]
names(sdemog) <- c("year", "cdr", "tfr", "marn", "le0")
View(sdemog)
sdemog <- sdemog[-1, ]
View(sdemog)
rownames(sdemog) <- NULL
sdemog
sdemog$year_n1 <- as.numeric(sdemog$year)
sdemog$year_n2 <- strtoi(sdemog$year)
sdemog$year <- as.character(sdemog$year)
sdemog$year[length(sdemog$year)] <- "2018"
sdemog$year_n3 <- strtoi(sdemog$year)
sdemog$cdr_n1 <- as.numeric(as.character(sdemog$cdr))
sdemog$marn_c <- as.character(sdemog$marn)
sdemog$marn_noc <- gsub(",","", sdemog$marn_c)
sdemog$marn_n2 <- as.numeric(sdemog$marn_noc)
sdemog$tfr_n <- as.numeric(as.character(sdemog$tfr))
sdemog$le0_n <- as.numeric(as.character(sdemog$le0))
ndemog <- sdemog[, c("year_n3", "cdr_n1", "tfr_n", "marn_n2", "le0_n")]
names(ndemog) <- c("year", "cdr", "tfr", "marn", "l10")
save(ndemog file = "C:/Users/eunee/sda/data/demog_5var.RData")
save(ndemog, file = "C:/Users/eunee/sda/data/demog_5var.RData")
save(ndemog, file = "C:/Users/eunee/sda/data/demog_2.RData")
save.image(file = "C:/Users/eunee/sda/data/demog.RData")
install.packages("ggplots")
install.packages("ggplots")
install.packages("ggplots")
install.packages('devtools')
## 데이터 불러오기
demog <- read.table("C:/Users/eunee/sda/data/demog.csv", sep = ",")
demog <- data.frame(t(demog))
## 데이터 정리 1
sdemog <- demog[,c("X1", "X6", "X8", "X11", "X15")]
names(sdemog) <- c("year", "cdr", "tfr", "marn", "le0")
sdemog <- sdemog[-1, ]
rownames(sdemog) <- NULL
## 데이터 정리 2
sdemog$year_n1 <- as.numeric(sdemog$year)
sdemog$year_n2 <- strtoi(sdemog$year)
sdemog$year <- as.character(sdemog$year)
sdemog$year[length(sdemog$year)] <- "2018"
sdemog$year_n3 <- strtoi(sdemog$year)
sdemog$cdr_n1 <- as.numeric(as.character(sdemog$cdr))
sdemog$marn_c <- as.character(sdemog$marn)
sdemog$marn_noc <- gsub(",","", sdemog$marn_c)
sdemog$marn_n2 <- as.numeric(sdemog$marn_noc)
sdemog$tfr_n <- as.numeric(as.character(sdemog$tfr))
sdemog$le0_n <- as.numeric(as.character(sdemog$le0))
ndemog <- sdemog[, c("year_n3", "cdr_n1", "tfr_n", "marn_n2", "le0_n")]
names(ndemog) <- c("year", "cdr", "tfr", "marn", "le0")
############################저장################################
save(ndemog, file = "C:/Users/eunee/sda/data/demog_5var.RData")
save(ndemog, file = "C:/Users/eunee/sda/data/demog_2.RData")
## 작업 공간 저장
save.image(file = "C:/Users/eunee/sda/data/demog.RData")
sdemog$le0_n <- as.numeric(as.character(sdemog$le0))
## 데이터 정리 1
sdemog <- demog[,c("X1", "X6", "X8", "X11", "X15")]
names(sdemog) <- c("year", "cdr", "tfr", "marn", "le0")
View(sdemog)
sdemog <- sdemog[-1, ]
rownames(sdemog) <- NULL
## 데이터 불러오기
demog <- read.table("C:/Users/eunee/sda/data/demog.csv", sep = ",")
demog <- data.frame(t(demog))
## 데이터 정리 1
sdemog <- demog[,c("X1", "X6", "X8", "X11", "X15")]
names(sdemog) <- c("year", "cdr", "tfr", "marn", "le0")
sdemog <- sdemog[-1, ]
rownames(sdemog) <- NULL
## 데이터 정리 2
sdemog$year_n1 <- as.numeric(sdemog$year)
sdemog$year_n2 <- strtoi(sdemog$year)
sdemog$year <- as.character(sdemog$year)
sdemog$year[length(sdemog$year)] <- "2018"
sdemog$year_n3 <- strtoi(sdemog$year)
sdemog$cdr_n1 <- as.numeric(as.character(sdemog$cdr))
sdemog$marn_c <- as.character(sdemog$marn)
sdemog$marn_noc <- gsub(",","", sdemog$marn_c)
sdemog$marn_n2 <- as.numeric(sdemog$marn_noc)
sdemog$tfr_n <- as.numeric(as.character(sdemog$tfr))
sdemog$le0_n <- as.numeric(as.character(sdemog$le0))
ndemog <- sdemog[, c("year_n3", "cdr_n1", "tfr_n", "marn_n2", "le0_n")]
names(ndemog) <- c("year", "cdr", "tfr", "marn", "le0")
############################저장################################
save(ndemog, file = "C:/Users/eunee/sda/data/demog_5var.RData")
save(ndemog, file = "C:/Users/eunee/sda/data/demog_2.RData")
## 작업 공간 저장
save.image(file = "C:/Users/eunee/sda/data/demog.RData")
View(ndemog)
## 데이터 불러오기
demog <- read.table("C:/Users/eunee/sda/data/demog.csv", sep = ",")
demog <- data.frame(t(demog))
## 데이터 정리 1
sdemog <- demog[,c("X1", "X6", "X8", "X11", "X15")]
names(sdemog) <- c("year", "cdr", "tfr", "marn", "le0")
sdemog <- sdemog[-1, ]
rownames(sdemog) <- NULL
## 데이터 정리 2
sdemog$year_n1 <- as.numeric(sdemog$year)
sdemog$year_n2 <- strtoi(sdemog$year)
sdemog$year <- as.character(sdemog$year)
sdemog$year[length(sdemog$year)] <- "2018"
sdemog$year_n3 <- strtoi(sdemog$year)
sdemog$cdr_n1 <- as.numeric(as.character(sdemog$cdr))
sdemog$marn_c <- as.character(sdemog$marn)
sdemog$marn_noc <- gsub(",","", sdemog$marn_c)
sdemog$marn_n2 <- as.numeric(sdemog$marn_noc)
sdemog$tfr_n <- as.numeric(as.character(sdemog$tfr))
sdemog$le0_n <- as.numeric(as.character(sdemog$le0))
ndemog <- sdemog[, c("year_n3", "cdr_n1", "tfr_n", "marn_n2", "le0_n")]
names(ndemog) <- c("year", "cdr", "tfr", "marn", "le0")
############################저장################################
save(ndemog, file = "C:/Users/eunee/khu_sda_2019/data/demog_5var.RData")
save(ndemog, file = "C:/Users/eunee/khu_sda_2019/data/demog_2.RData")
## 작업 공간 저장
save.image(file = "C:/Users/eunee/khu_sda_2019/data/demog.RData")
setwd("C:/Users/eunee/khu_sda_2019/data")
load("demog_5var.RData")
attach(ndemog)
plot(cdr,tfr)
scatter.smooth(cdr, tfr, lpars = list(lty = 2), xlab = "Crude Death Rates", ylab = "Total Fertility Rates")
abline(fit1, lty = 3)
legend(7.1, 1.5, pch = c(1, NA, NA), lty = c(NA, 2:3), c("obesrvations", "loess line", "regression line", bty = "n"))
scatter.smooth(cdr, tfr, lpars = list(lty = 2), xlab = "Crude Death Rates", ylab = "Total Fertility Rates")
abline(fit1, lty = 3)
legend(7.1, 1.5, pch = c(1, NA, NA), lty = c(NA, 2:3), c("obesrvations", "loess line", "regression line", bty = "n"))
scatter.smooth(cdr, tfr, lpars = list(lty = 2), xlab = "Crude Death Rates", ylab = "Total Fertility Rates")
abline(fit1, lty = 3)
legend(7.1, 1.5, pch = c(1, NA, NA), lty = c(NA, 2:3), c("obesrvations", "loess line", "regression line", bty = "n"))
fit1 <- lm(tfr ~ cdr)
plot(cdr,tfr)
scatter.smooth(cdr, tfr, lpars = list(lty = 2), xlab = "Crude Death Rates", ylab = "Total Fertility Rates")
abline(fit1, lty = 3)
legend(7.1, 1.5, pch = c(1, NA, NA), lty = c(NA, 2:3), c("obesrvations", "loess line", "regression line", bty = "n"))
scatter.smooth(cdr, tfr, lpars = list(lty=2), , xlab = "Crude Death Rates", ylab = "Total Fertility Rates")
abline(fit1, lty = 3)
legend(7.1, 1.5, pch = c(1, NA, NA), lty = c(NA, 2:3), c("observations", "loess line", "regression line"), bty = "n")
legend(7.1, 1.5, pch = c(1, NA, NA), lty = c(NA, 2:3), c("obesrvations", "loess line", "regression line"), bty = "n")
##abline
plot(cdr, tfr)
scatter.smooth(cdr, tfr, lpars=list(lty=2),
xlab="Crude Death Rates", ylab="Total Fertility Rates")
abline(fit1, lty=3)
legend(7.1, 1.5, pch=c(1, NA, NA), lty=c(NA, 2:3),
c("observations", "loess line", "regression line"), bty="n")
args(t.test)
?t.test
args(lm)
args(boxplot)
?lm
?boxplot
?t.test
?boxplot
?aov
?anova
?t.test
t.test(cdr, tfr)
t.test(tfr ~ cdr)
?lm
detach(ndemog)
t.test(tfr ~ cdr, ndemog)
t.test(cdr, tfr)
t.test(tfr ~ cdr, data = ndemog)
summary(ndemog$tfr, ndemog$cdr)
summary(ndemog$tfr)
glimpse(ndemog$tfr)
str(ndemog$tfr)
str(ndemog$cdr)
ndemog
setwd("C:/Users/eunee/khu_sda_2019/data")
load("demog_5var.RData")
ndemog$year_c <- floor(ndemog$year/10)-197
ndemog$tfr_c <- cut(ndemog$tfr, breaks = c(-Inf, 1.3, 2.1, Inf), labels = c("llf", "repl", "high"))
ndemog$cdr_c <- cut(ndemog$cdr, breaks = c(-Inf, 6, 7, Inf), labels = c("LT6", "6-LT7", "EToMT7"))
attach(ndemog)
View(ndemog)
typeof(tfr_c)
typeof(cdr_c)
View(ndemog)
class(cdr_c)
t.test(cdr, tfr)
t.test(cdr_c, tfr)
t.test(cdr_c, tfr_c)
t.test(cdr, tfr_c)
t.test(cdr, tfr)
t.test(tfr ~ cdr)
View(ndemog)
t.test(tfr ~ cdr_c)
ndemog$cdr_c0 <- cut(ndemog$cdr, breaks = c(-Inf, 6, Inf), labels = c("group1", "group2"))
View(ndemog)
t.test(tfr ~ cdr_c0)
attach(ndemog)
t.test(tfr ~ cdr_c0)
t.test(cdr, tfr)
?t.test
class(cdr)
class(tfr)
class(cdr_c0)
